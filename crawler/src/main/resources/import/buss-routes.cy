//See GraphRepositoryTest.filterBadStopPoints to find out bad stops which make apoc.load.json() fail 

CALL apoc.periodic.iterate("CALL apoc.load.json('https://api.tfl.lu/v1/Line/Route') YIELD value as routeJ",
"
WITH routeJ
UNWIND range(0, size(routeJ.stopPoints)-1) AS i
WITH routeJ, routeJ.stopPoints as sp, i as index
WHERE not sp[index] in [140701016,160904001,200417047,220401001,140701022,200304014,220401001,140701022,200417047,200417047,200417051,200409008,160904001,
140701016,140701016,140701022,160904001,140701016,140701016,200417047,160904001,140701016,140701002,200417047,200417051,200409008,160904001,140701016,160904001,
200417047,200304011,200417047,140701016,160904001,200417051,200417051,200409008,160904001,140701016,160904001,200417047,160904001,140701022,200417047,160904001,
140701016,160904001,200417047,200304011,160904001,140701016,140701016,160904001,140701022,160904001,200417047,200417051,200409008,160904001,200409008,140401002,
191101001,200304011,200423007,200409008,140701022,160904001,140701022,140701002,140701016,140701002,140701016,140701016,200304014,220401001,200417047,200417047,
160904001,200409008,200417051,300000021,300000025,140701016,200304011,200417051,160904001,140701016,140701016,220401001,200304014,200417051,200409008,160904001,
140701016,200417051,200409008,160904001,140701016,200417051,160904001,140701016,220401001,200304014,200409008,200304014,200304011,140701016,140701016,160904001,
160904001,140701002,140701016,160904001,200409008,200417051,200417051,160904001,140701016,200304011,160904001,140701016,140701016,200417047,200417047,140701016,
160904001,200417051,200409008,200417047,200417047,200417051,200409008,160904001,220401001,140701022,200417047,200417047,140701002,140701016,140701016,400000018,
400000055,220401001,200304014,200304014,220401001,160904001,200417047,140701016,160904001,220401001,140701016,140701016,160904001,200417047,200304011,200417047,
200304011,160904001,200409008,200417051,200417047,200304011,160904001,200417047,140701016,200417047]
CALL apoc.load.json('https://api.tfl.lu/v1/StopPoint/' + sp[index]) YIELD value as stoppointJ
MERGE (s:StopPoint { id: sp[index] })
ON CREATE SET s.lat = toFloat(stoppointJ.geometry.coordinates[0]), s.long = toFloat(stoppointJ.geometry.coordinates[1]), s.name=stoppointJ.properties.name
ON MATCH SET s.lat = toFloat(stoppointJ.geometry.coordinates[0]), s.long = toFloat(stoppointJ.geometry.coordinates[1]), s.name=stoppointJ.properties.name
MERGE (p:Route {id:routeJ.id, name:routeJ.name})
CREATE (p)-[:HAS_SPOTPOINT{position:index}]->(s)", {batchSize: 100, iterateList: false})
